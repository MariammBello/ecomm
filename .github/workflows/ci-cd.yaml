name: CI/CD Pipeline

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

env:
  REGISTRY: ghcr.io
  BACKEND_IMAGE_NAME: backend
  FRONTEND_IMAGE_NAME: frontend
  # Using lowercase as per Docker best practices
  REPO_OWNER: mariammbello
  REPO_NAME: ecomm

jobs:
  build-and-push:
    runs-on: ubuntu-latest
    permissions:
      contents: write
      packages: write
    
    steps:
    - uses: actions/checkout@v3

    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v2

    - name: Login to GitHub Container Registry
      uses: docker/login-action@v2
      with:
        registry: ${{ env.REGISTRY }}
        username: ${{ github.actor }}
        password: ${{ secrets.GITHUB_TOKEN }}

    - name: Extract Backend metadata
      id: meta-backend
      uses: docker/metadata-action@v4
      with:
        images: ${{ env.REGISTRY }}/${{ env.REPO_OWNER }}/${{ env.REPO_NAME }}/${{ env.BACKEND_IMAGE_NAME }}
        tags: |
          type=sha,format=long
          type=raw,value=latest
        labels: |
          org.opencontainers.image.title=Backend Service
          org.opencontainers.image.description=Flask backend for e-commerce application
          org.opencontainers.image.version={{version}}
          org.opencontainers.image.created={{date 'YYYY-MM-DD'}}

    - name: Extract Frontend metadata
      id: meta-frontend
      uses: docker/metadata-action@v4
      with:
        images: ${{ env.REGISTRY }}/${{ env.REPO_OWNER }}/${{ env.REPO_NAME }}/${{ env.FRONTEND_IMAGE_NAME }}
        tags: |
          type=sha,format=long
          type=raw,value=latest
        labels: |
          org.opencontainers.image.title=Frontend Service
          org.opencontainers.image.description=Static frontend for e-commerce application
          org.opencontainers.image.version={{version}}
          org.opencontainers.image.created={{date 'YYYY-MM-DD'}}

    - name: Build and push Backend
      uses: docker/build-push-action@v4
      with:
        context: ./backend
        push: true
        tags: ${{ steps.meta-backend.outputs.tags }}
        labels: ${{ steps.meta-backend.outputs.labels }}
        cache-from: type=gha
        cache-to: type=gha,mode=max

    - name: Build and push Frontend
      uses: docker/build-push-action@v4
      with:
        context: ./frontend
        push: true
        tags: ${{ steps.meta-frontend.outputs.tags }}
        labels: ${{ steps.meta-frontend.outputs.labels }}
        cache-from: type=gha
        cache-to: type=gha,mode=max

    - name: Update Kubernetes manifests
      run: |
        cd k8s/on-premise
        # Get both SHA and latest tags
        BACKEND_SHA_TAG=$(echo "${{ steps.meta-backend.outputs.tags }}" | grep "sha-" | head -n 1)
        FRONTEND_SHA_TAG=$(echo "${{ steps.meta-frontend.outputs.tags }}" | grep "sha-" | head -n 1)
        
        # Update backend.yaml with both tags
        sed -i "/image:/c\        image: ${BACKEND_SHA_TAG} # Latest: ghcr.io/${{ env.REPO_OWNER }}/${{ env.REPO_NAME }}/${{ env.BACKEND_IMAGE_NAME }}:latest" backend.yaml
        
        # Update frontend.yaml with both tags
        sed -i "/image:/c\        image: ${FRONTEND_SHA_TAG} # Latest: ghcr.io/${{ env.REPO_OWNER }}/${{ env.REPO_NAME }}/${{ env.FRONTEND_IMAGE_NAME }}:latest" frontend.yaml

    - name: Commit and push changes
      run: |
        git config --global user.name 'github-actions[bot]'
        git config --global user.email 'github-actions[bot]@users.noreply.github.com'
        git add k8s/on-premise/*.yaml
        git commit -m "Update image tags [skip ci]" || echo "No changes to commit"
        git push
